@model IEPprojekat.Models.InformationsForAdministrator

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Portal information</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.ItemsPerPage, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemsPerPage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemsPerPage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SilverPack, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SilverPack, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SilverPack, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GoldPack, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GoldPack, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GoldPack, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlatinumPack, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PlatinumPack, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PlatinumPack, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ValueToken, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ValueToken, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ValueToken, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Currency, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-10">
                @{ 
                    List<SelectListItem> selectList = new List<SelectListItem>();
                    selectList.Add(new SelectListItem
                    {
                        Text = "RSD",
                        Value = "RSD"
                    });
                    selectList.Add(new SelectListItem
                    {
                        Text = "EUR",
                        Value = "EUR"
                    });
                    selectList.Add(new SelectListItem
                    {
                        Text = "USD",
                        Value = "USD"
                    });

                }
                @Html.DropDownListFor(model => model.Currency, selectList, htmlAttributes : new { @class="form-control"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-outline-secondary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
